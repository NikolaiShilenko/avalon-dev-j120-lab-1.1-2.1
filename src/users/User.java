package users;

/**
 * @author Nikolai Shilenko
 *
 */

/**
 * Для заданного класса User переопределите конструкторы и методы
 * clone(), equls() и hashCode() в соответствии с указаниями, заданными в
 * комментариях к этим методам:
 */
public class User {
	/** Уникальный идентификатор пользователя. */
	
	 private int id;
	 
	 /** Имя пользователя. */
	 
	 private String name;
	 
	 /** Определяет является ли данный пользователь
	администратором системы.*/
	 
	 private boolean isAdmin;
	 
	 /** Конструктор по умолчанию. */
	 public User() { }
	 
	 /** Конструктор, определяющий все поля класса.
	 * @param id уникальный идентификатор пользователя.
	 * @param name имя пользователя.
	 * @param isAdmin задаёт значение true, если
	пользователь
	* является администратором системы.
	 * @throws UserException выбрасывается в случаях, когда:
	* - идентификатор пользователя не уникален;
	* - имя пользователя равно null или является пустым.
	* (Класс данного исключения определите самостоятельно).
	*/
	 
	public User(int id, String name, boolean isAdmin)
	 throws UserException {
	 // Реализация конструктора ...
	}
	
	/**
	* Метод клонирует объект данного класса по следующим
	* правилам:
	* - имя пользователя name и поле isAdmin дублируются;
	* - для идентификатора id выбирается новое уникальное
	* значение (в данной задаче можно генерировать случайное
	* значение, например, с помощью метода Math.random()).
	* @return ссылка на клон данного объекта.
	* @throws CloneNotSupportedException выбрасывается в
	* случае, когда имя пользователя равно null или является
	* пустой строкой.
	*/
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
	// Реализация метода ...
	}
	
	/**
	* Метод сравнивает по содержанию текущий объект с объектом
	* obj.
	* @param obj ссылка на объект, с которым сравнивается
	* текущий объект.
	* @return возвращает значение true, если имя пользователя
	* name и значение поля isAdmin у обоих объектов совпадают.
	*/
	
	@Override
	public boolean equals(Object obj) {
	 // Реализация метода...
	}
	
	/**
	* Метод возвращает хэш-код данного объекта. Алгоритм
	 * вычисления кода должен учитывать имя пользователя и
	 * значение поля isAdmin.
	 * @return хэш-код объекта.
	 */
	
	 @Override
	 public int hashCode() {
	 // Реализация метода...
	 }

}
